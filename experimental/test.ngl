// cluster std
ngl:function putchar
{
    <ngc:char>
    .result ngl:instruction:putchar<char>
}

        Module* M = new Module("cluster", Context);
        std::vector<Type*> PutCharArgs = { Type::getInt32Ty(Context) };
        FunctionType* PutCharType = FunctionType::get(Type::getInt32Ty(Context), PutCharArgs, false);
        Function::Create(PutCharType, Function::ExternalLinkage, "putchar", M);*/

//
ngl:cluster:import<std>

ngl:program
{
    ngc:string<"Hello"> concept_string
    ngc:char<'A'> concept_char


    std:putchar<concept_char>
}

// print require a concretisation
ngl:concrete<program.concept_string, ngl:storage:entity> concrete_string